# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
isolated_build = true
envlist =
    lint
    manifest
    mypy
    pyroma
    flake8
    py

[testenv]
commands = pytest tests/
extras =
    tests

[testenv:update]
commands =
    biomappings update
usedevelop = true
extras =
    charts
    exports

[testenv:upload-ndex]
commands =
    biomappings ndex
extras =
    ndex
passenv =
    NDEX_USERNAME
    NDEX_PASSWORD

[testenv:upload-apicuron]
commands =
    python -m biomappings.apicuron
extras =
    apicuron
passenv =
    APICURON_TOKEN

[testenv:manifest]
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:mypy]
deps =
    mypy
    pydantic
skip_install = true
commands = mypy --install-types --non-interactive --ignore-missing-imports src/biomappings/
description = Run the mypy tool to check static typing on the project.

[testenv:pyroma]
deps =
    pygments
    pyroma
skip_install = true
commands = pyroma .
description = Run the pyroma tool to check the package friendliness of the project.

[testenv:lint]
deps =
    black
    isort
skip_install = true
commands =
    black src/ scripts/ tests/
    isort src/ scripts/ tests/
description = Run linters

[testenv:flake8]
skip_install = true
deps =
    darglint
    flake8
    # flake8-bandit
    flake8-black
    flake8-bugbear
    flake8-colors
    flake8-docstrings
    flake8-isort
    # flake8-print
    pep8-naming
    pydocstyle
commands =
    flake8 src/biomappings/ scripts/ tests/
description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming).

####################
# Deployment tools #
####################

[testenv:bumpversion]
commands = bumpversion {posargs}
skip_install = true
passenv = HOME
deps =
    bumpversion

[testenv:build]
skip_install = true
deps =
    wheel
    build
commands =
    python -m build --sdist --wheel --no-isolation

[testenv:release]
skip_install = true
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*

[testenv:finish]
skip_install = true
passenv = HOME
deps =
    {[testenv:release]deps}
    bumpversion
commands =
    bumpversion release
    {[testenv:release]commands}
    git push
    bumpversion patch
    git push
whitelist_externals =
    /usr/bin/git
